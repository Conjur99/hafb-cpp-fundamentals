# PA1-4: CALCULATING AGE USING PASS BY VALUE ARGUMENTS
James wants to write a C++ program to calculate what the age of a person will be after five years by providing their current age as an `input`.

To implement such a program, he is going to write a function that takes a person's age by value and computes how old they will be in 5 years, and then prints it on the screen:

- Define a function `byvalue_age_in_5_years`, as illustrated here. Make sure that the value in the calling code does not change:
    ```c++
    void byvalue_age_in_5_years(int age) 
    {
        age += 5;
        cout << "Age in 5 years: " << age << endl;
    }
    ```
- Now, in `main()`, call the function we created in the previous step by passing the variable `age` as a value:
    ```c++
    int main() 
    {
        int age = 95;
        byvalue_age_in_5_years(age);
        cout << "Current age: " << age << endl;
    }
    ```
---
*Note:*
*Pass by value should be the default way of accepting arguments: always use it unless you have a specific reason not to.*

---
#### Notes to compile and run the code.

##### Using g++:
```bash
$ g++ -o main main.cpp 
# Now you can run your code
$ .\main.exe
```

##### Using CMake:

For Windows:
```bash
$ mkdir build
$ cd build
$ cmake .. -G "MinGW Makefiles"
$ cmake --build .
# Now you can run your code
$ .\main.exe
```
For Linux/Mac:
```bash
$ mkdir build
$ cd build
$ cmake ..
$ cmake --build .
# Now you can run your code
$ .\main
```